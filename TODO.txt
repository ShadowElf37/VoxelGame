- GPU visibility computation into mesh generator 
- chunks cache meshes and only regenerate locally upon block update
- chunks store neighbors for quick lookup, in fact it's like a linked list, much better even for get_block_id(x,y,z) because you can travel up the chain from anywhere and it's usually better
- proper hitbox for player
- ECS

- chunk loading/unloading

- block proto integration with transparency (sends new Chunk::transparencies array with 0 solid or 1 glass/air)
- glass block

- terrain generation from perlin noise

- pause menu with egui-wgpu
- fog with noise

- lods?

- use vertex slice in render pass to do cpu-side frustum/occlusion culling


- sky shader (even if it's just solid color, currently &world is passed to the renderer which is weird)
- radiance cascades

- dont duplicate e.g. dirt.png when loading textures (for dirt and grass block) - have it set the offset to the previous texture's index after finding it




lighting, physics in thread
own their own clocks (change nomenclature to "tick" instead of "frame")
have internal fences to rate limit
access lighting array and e.pos/e.vel (or make a new e.PhysState) using mutex



